{"version":3,"sources":["assets/svg/left-arrow.svg","assets/svg/right-arrow.svg","assets/svg/edit.svg","assets/svg/photo-camera.svg","assets/svg/book.svg","assets/svg/monitor.svg","components/Slide.js","components/Controls.js","components/SlideList.js","components/Settings.js","components/App.js","index.js"],"names":["module","exports","Slide","props","prevPos","list","className","this","status","LOAD_STATE","LOADING","LOADED","direction","curr","undefined","content","map","el","i","distance","slideCount","position","Math","abs","transition","offset","key","style","minWidth","multi","maxWidth","transform","React","Component","Controls","onClick","prevSlide","src","require","alt","nextSlide","SlideList","Array","from","keys","goto","Settings","click","setType","CONTENT_TYPE","CUSTOM","activeCheck","contentType","iconPath","text","IMAGES","TEXT","toggleMulti","elt","App","ERROR","state","currentSlide","offsetX","loadState","multiMode","mouseDown","swipeX","bind","handleTouchStart","handleTouchEnd","handleMouseDown","hadleMouseDown","handleMouseUp","swipeDirection","goToSlide","fetchContent","setContentType","toggleMultiMode","type","setState","self","fetch","then","response","json","data","urls","regular","alt_description","catch","slice","customContent","width","height","controls","length","concat","fill","e","touches","clientX","changedTouches","touch","diff","x","onTouchStart","touchStartEvent","onTouchMove","touchMoveEvent","handleTouchMove","onTouchEnd","touchEndEvent","onMouseDown","mouseDownEvent","onMouseMove","mouseMoveEvent","handleMouseMove","onMouseUp","mouseUpEvent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbcb290c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left-arrow.6867dc1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/right-arrow.445abfc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.33ae1541.svg\";","module.exports = __webpack_public_path__ + \"static/media/photo-camera.eceedf32.svg\";","module.exports = __webpack_public_path__ + \"static/media/book.4b2ddf89.svg\";","module.exports = __webpack_public_path__ + \"static/media/monitor.8ee074b9.svg\";","import React from 'react';\n\nclass Slide extends React.Component {\n    constructor(props) {\n        super(props);\n        this.prevPos = [];\n    }\n    render() {\n        let list = <div className=\"slide-content no-select\">Error loading content</div>;\n\n        switch(this.props.status) {\n            case this.props.LOAD_STATE.LOADING: \n                list = <div className=\"slide-content no-select\">Loading content...</div>;\n                break;\n            case this.props.LOAD_STATE.LOADED: \n                // False = Left, True = Right, Undef = First render\n                let direction = this.prevPos[this.props.curr] ?  \n                                (this.prevPos[this.props.curr] < 0) : undefined;\n\n                list = this.props.content.map((el, i) => {\n\n                    /* Counts distance from slide A to slide B in that way:\n                        [->, B, x, x, A, ->, ->] */\n                    let distance =  (this.props.curr > i) ? \n                                    (this.props.slideCount - this.props.curr + i) : \n                                    -(this.props.slideCount - i + this.props.curr);\n        \n                    /* Counts slide position relatively from current slide */\n                    let position =  (Math.abs(i - this.props.curr) < Math.abs(distance)) ?\n                                    (i - this.props.curr) : distance;\n        \n                    let transition = ((position - this.prevPos[i] > 0) === direction \n                                        && !this.props.offset && direction !== undefined);\n                    this.prevPos[i] = position;\n        \n                    return (\n                        <div \n                            className=\"slide-content no-select no-eve\"\n                            key={\"slide\"+i} \n                            style={{\n                                minWidth: `${this.props.multi ? 33.3 : 100}%`,\n                                maxWidth: `${this.props.multi ? 33.3 : 100}%`,\n                                transition: \n                                    `${transition ? 0.5 : 0}s`,\n                                transform: \n                                    `translateX(calc(\n                                        ${position * 100 + (this.props.multi ? 100 : 0)}% + \n                                        ${this.props.offset + \n                                        (position > 0 ? 10 : (position < 0 ? -10 : 0))}px))`\n                        }}>{el}</div>\n                    );\n                });\n                break;\n            default:\n                break;\n        }\n        return (\n            <div className=\"container no-select no-eve\">\n                {list}\n            </div>\n        );\n    }\n}\n\nexport default Slide;","import React from 'react';\n\nconst Controls = (props) => {\n    return (\n        <div className=\"container controls-container\">\n            <div className=\"slide-control-button no-select\" onClick={props.prevSlide}>\n                <img \n                    className=\"no-select no-eve\" \n                    src={require('../assets/svg/left-arrow.svg')} alt=\"Left Arrow\">\n                </img>\n            </div>\n            <div className=\"slide-control-button no-select\" onClick={props.nextSlide}>\n                <img \n                    className=\"no-select no-eve\" \n                    src={require('../assets/svg/right-arrow.svg')} alt=\"Right Arrow\">\n                </img>\n            </div>\n        </div>\n    );\n}\n\nexport default Controls;","import React from 'react';\n\nconst SlideList = (props) => {\n    if(props.multi) {\n        return true;\n    }\n    let list = Array.from(Array(props.slideCount).keys())\n                    .map(el => (\n                        (props.curr === el)\n                        ?\n                        (<div    \n                            className=\"slide-point no-select slide-point-active\" \n                            key={\"slide\"+el} \n                            onClick={() => props.goto(el)}>\n                            &bull;\n                        </div>)\n                        :\n                        (<div    \n                            className=\"slide-point no-select\" \n                            key={\"slide\"+el} \n                            onClick={() => props.goto(el)}>\n                            &bull;\n                        </div>)\n                    ));           \n    return (\n        <div className=\"slide-list\">{list}</div>\n    );\n};\n\nexport default SlideList;","import React from 'react';\n\nconst Settings = (props) => {\n    const buttons = [{\n        click: () => props.setType(props.CONTENT_TYPE.CUSTOM),\n        activeCheck: props.contentType === props.CONTENT_TYPE.CUSTOM,\n        iconPath: require('../assets/svg/edit.svg'),\n        alt: \"Pencil Icon\",\n        text: \"Custom\"\n    }, {\n        click: () => props.setType(props.CONTENT_TYPE.IMAGES),\n        activeCheck: props.contentType === props.CONTENT_TYPE.IMAGES,\n        iconPath: require('../assets/svg/photo-camera.svg'),\n        alt: \"Camera Icon\",\n        text: \"Images\"\n    }, {\n        click: () => props.setType(props.CONTENT_TYPE.TEXT),\n        activeCheck: props.contentType === props.CONTENT_TYPE.TEXT,\n        iconPath: require('../assets/svg/book.svg'),\n        alt: \"Book Icon\",\n        text: \"Quotes\"\n    }, {\n        click: props.toggleMulti,\n        activeCheck: props.multi,\n        iconPath: require('../assets/svg/monitor.svg'),\n        alt: \"Monitor Icon\",\n        text: \"Multi\"\n    }];\n\n    let list = buttons.map(el => (\n        <div onClick={el.click} className={el.activeCheck ?\n        \"settings-button no-select settings-button-active\" : \"settings-button no-select\"}>\n            <img className=\"no-select no-eve\" src={el.iconPath} alt={el.elt}></img>\n            <br/><span>{el.text}</span>\n        </div>\n    ));\n\n    return (\n        <div className=\"settings-container\">\n            {list}\n        </div>\n    );\n}\n\nexport default Settings;","import React from \"react\";\n\nimport Slide from './Slide';\nimport Controls from './Controls';\nimport SlideList from './SlideList';\nimport Settings from './Settings';\n\nimport '../styles/App.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.LOAD_STATE = {\n            LOADING: 0,\n            LOADED: 1,\n            ERROR: 2\n        };\n        this.CONTENT_TYPE = {\n            CUSTOM: -1,\n            IMAGES: 0,\n            TEXT: 1\n        };\n\n        this.state = {\n            currentSlide: 0,\n            offsetX: 0,\n            content: [],\n            contentType: this.CONTENT_TYPE.CUSTOM,\n            loadState: this.LOAD_STATE.LOADING,\n            multiMode: false\n        };\n\n        this.mouseDown = false;\n        this.swipeX = 0;\n\n        this.prevSlide = this.prevSlide.bind(this);\n        this.nextSlide = this.nextSlide.bind(this);\n        this.handleTouchStart = this.handleTouchStart.bind(this);\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\n        this.handleMouseDown = this.hadleMouseDown.bind(this);\n        this.handleMouseUp = this.handleMouseUp.bind(this);\n        this.swipeDirection = this.swipeDirection.bind(this);\n        this.goToSlide = this.goToSlide.bind(this);\n        this.fetchContent = this.fetchContent.bind(this);\n        this.setContentType = this.setContentType.bind(this);\n        this.toggleMultiMode = this.toggleMultiMode.bind(this);\n\n        this.slideCount = 6;\n    }\n    componentDidMount() {\n        this.fetchContent(this.state.contentType);\n    }\n    fetchContent(type) {\n        this.setState({loadState: this.LOAD_STATE.LOADING});\n\n        let self = this;\n\n        switch(type) {\n            case this.CONTENT_TYPE.IMAGES:\n                fetch(\"https://api.unsplash.com/photos/random/?count=\"\n                        +self.slideCount+\n                        \"&client_id=wVTdRoReBseX_BHaV8X2LQzoNDDlhzxnFKWem52g_JY\")\n                .then(function(response) {\n                    return response.json();\n                })\n                .then(function(data) {\n                    self.setState({\n                        content: data.map(el => (\n                                <img src={el.urls.regular} alt={el.alt_description}></img>)),\n                        loadState: self.LOAD_STATE.LOADED\n                    });\n                })\n                .catch(() => {\n                    self.setState({loadState: self.LOAD_STATE.ERROR});\n                });\n                break;\n            case this.CONTENT_TYPE.TEXT:\n                fetch(\"https://type.fit/api/quotes\")\n                .then(function(response) {\n                    return response.json();\n                })\n                .then(function(data) {\n                    self.setState({\n                        content: data.slice(0, self.slideCount).map(el => (\n                                <p>{el.text}</p>)),\n                        loadState: self.LOAD_STATE.LOADED\n                    });\n                })\n                .catch(() => {\n                    self.setState({loadState: self.LOAD_STATE.ERROR});\n                });\n                break;\n            default:\n                let customContent = [\n                    <h1>First Slide</h1>,\n                    <p>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, \n                        sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \n                        Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris \n                        nisi ut aliquip ex ea commodo consequat.\n                    </p>,\n                    <img \n                        src=\"https://cache.desktopnexus.com/thumbseg/919/919386-bigthumbnail.jpg\"\n                        alt=\"Nature\">\n                    </img>,\n                    <img \n                        src='https://static.scientificamerican.com/sciam/cache/file/4E0744CD-793A-4EF8-B550B54F7F2C4406_source.jpg'\n                        alt=\"Nature\">\n                    </img>,\n                    <img \n                        src='https://www.sampleposts.com/wp-content/uploads/2020/04/Nature-climate.jpg'\n                        alt=\"Nature\">\n                    </img>,\n                    <video width='640' height='480' controls>\n                        <source src='https://www.videvo.net/videvo_files/converted/2013_07/videos/hd0079.mov26726.mp4'\n                                type='video/mp4'/>\n                        Your browser does not support the video.\n                    </video>\n                ];\n                if(customContent.length < this.slideCount) {\n                    customContent = customContent\n                                    .concat(Array(this.slideCount-customContent.length)\n                                    .fill(<h2>No content</h2>));\n                }\n                this.setState({\n                    content: customContent.slice(0, this.slideCount),\n                    loadState: self.LOAD_STATE.LOADED\n                });\n                break;\n        }\n    }\n    setContentType(type) {\n        this.setState({contentType: type});\n        this.fetchContent(type);\n        this.goToSlide(0);\n    }\n    toggleMultiMode() {\n        this.setState({multiMode: !this.state.multiMode})\n    }\n    prevSlide() {\n        if(this.state.currentSlide <= 0) {\n            this.setState({currentSlide: this.slideCount-1, offsetX: 0});\n        } else {\n            this.setState({currentSlide: this.state.currentSlide-1, offsetX: 0});\n        } \n    }\n    nextSlide() {\n        if(this.state.currentSlide >= this.slideCount-1) {\n            this.setState({currentSlide: 0, offsetX: 0});\n        } else {\n            this.setState({currentSlide: this.state.currentSlide+1, offsetX: 0});\n        }\n    }\n    handleTouchStart(e) {\n        this.swipeX = e.touches[0].clientX;\n    }\n    handleTouchMove(e) {\n        if (e.changedTouches && e.changedTouches.length) {\n            const touch = e.changedTouches[0];\n            this.setState({offsetX: touch.clientX - this.swipeX});\n        }\n    }\n    handleTouchEnd(e) {\n        const touch = e.changedTouches[0];\n        this.swipeDirection(this.swipeX - touch.clientX);\n    }\n    hadleMouseDown(e) {\n        this.swipeX = e.clientX;\n        this.mouseDown = true;\n    }\n    handleMouseMove(e) {\n        if(this.mouseDown) {\n            this.setState({offsetX: e.clientX - this.swipeX});\n        } \n    }\n    handleMouseUp(e) {\n        this.swipeDirection(this.swipeX - e.clientX);\n        this.mouseDown = false;\n    }\n    swipeDirection(diff) {\n        if(diff > 50) {\n            this.nextSlide();\n        } else if(diff < -50) {\n            this.prevSlide();\n        } else {\n            this.setState({offsetX: 0});\n        }\n    }\n    goToSlide(x) {\n        this.setState({currentSlide: x});\n    }\n    render() {\n        return (\n            <div \n                className=\"container\" \n                onTouchStart={touchStartEvent => this.handleTouchStart(touchStartEvent)} \n                onTouchMove={touchMoveEvent => this.handleTouchMove(touchMoveEvent)}\n                onTouchEnd={touchEndEvent => this.handleTouchEnd(touchEndEvent)} \n                onMouseDown={mouseDownEvent => this.handleMouseDown(mouseDownEvent)}\n                onMouseMove={mouseMoveEvent => this.handleMouseMove(mouseMoveEvent)}  \n                onMouseUp={mouseUpEvent => this.handleMouseUp(mouseUpEvent)}>\n\n                <Slide\n                    content={this.state.content} \n                    curr={this.state.currentSlide}\n                    offset={this.state.offsetX}\n                    slideCount={this.slideCount}\n                    multi={this.state.multiMode}\n                    status={this.state.loadState}\n                    LOAD_STATE={this.LOAD_STATE}/>\n                <Controls \n                    prevSlide={this.prevSlide} \n                    nextSlide={this.nextSlide}/>\n                <SlideList \n                    goto={this.goToSlide} \n                    curr={this.state.currentSlide}\n                    slideCount={this.slideCount}\n                    multi={this.state.multiMode}/>\n                <Settings\n                    multi={this.state.multiMode}\n                    toggleMulti={this.toggleMultiMode}\n                    setType={this.setContentType}\n                    contentType={this.state.contentType}\n                    CONTENT_TYPE={this.CONTENT_TYPE}/>    \n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);"],"sourceRoot":""}